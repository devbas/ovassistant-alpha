---- 1. Getting the db ready ----- 
ALTER TABLE shapes ADD COLUMN geom geography(POINT,4326);
ALTER TABLE shape_lines ADD COLUMN geom geography(LINESTRING,4326);

CREATE EXTENSION postgis;
CREATE EXTENSION postgis_topology;
CREATE EXTENSION postgis_sfcgal;

UPDATE shapes SET geom = ST_MakePoint(shape_pt_lon,shape_pt_lat);

CREATE INDEX idx_shape_lines ON shape_lines USING gist(geom)


---- 1. Create shape lines based on the shape points ----
INSERT INTO shape_lines (shape_id, geom)
SELECT shape_id, ST_MakeLine(ST_MakePoint(shape_pt_lon::double precision, shape_pt_lat::double precision) ORDER BY shape_id, shape_pt_sequence ASC) As newgeom
FROM shapes
GROUP BY shape_id


ERROR:  function "st_3dintersection(geometry, geometry)" does not exist 






--------
SELECT * 
FROM temp_shapes
WHERE shape_id = 802850


CREATE OR REPLACE VIEW AMS_TEST_1 AS
WITH my AS ( 
 SELECT ST_Buffer(ST_SetSRID(ST_Point(4.54932, 52.37522),4326), 100) areaA
)
SELECT *, ST_AsText(geom3)
FROM trajectories
JOIN my
ON areaA && geom3
AND ST_Within(ST_StartPoint(geom3), areaA)


SELECT arrival_time, shape_dist_traveled, stop_lat, stop_lon FROM stop_times ST INNER JOIN stops S ON (S.stop_id = ST.stop_id) WHERE ST.trip_id = 90640657 ORDER BY shape_dist_traveled ASC

SELECT ST_AsText(ST_Force_3D(ST_GeomFromEWKT('SRID=4326;LINESTRINGZ(4.76218700409 52.2927587513 1561203420, 4.76218700409 52.3093215393 1561203660, 4.87283742295 52.3093215393 1561203660, 4.87283742295 52.33876177267 1561204140, 4.88964542871666 52.33876177267 1561204140, 4.88964542871666 52.337120863311 1561204320, 4.93732452393 52.337120863311 1561204320, 4.93732452393 52.3237256996 1561204560, 4.95542407036 52.3237256996 1561204560, 4.95542407036 52.3301499022 1561204740, 5.04334151745 52.3301499022 1561204740, 5.04334151745 52.3124470746 1561205160, 5.15693843365 52.3124470746 1561205160, 5.15693843365 52.2807059141 1561206000, 5.16296803951 52.2807059141 1561206000, 5.16296803951 52.2654029812 1561206180, 5.17391145229 52.2654029812 1561206180, 5.17391145229 52.2378266477 1561206360, 5.18183469772 52.2378266477 1561206360, 5.18183469772 52.2262123333 1561206540, 5.1871830225 52.2262123333 1561206540, 5.1871830225 52.2162054878 1561206780, 5.17912298441 52.2162054878 1561206780, 5.17912298441 52.1779286417 1561206960, 5.12536346912 52.1779286417 1561206960, 5.12536346912 52.1100074277 1561207440, 5.11036455631 52.1100074277 1561207440, 5.11036455631 52.0901006501 1561207740)')))

set postgis.backend=geos;
select ST_AsText(ST_Intersection(linestring, polygon)) As wkt
from  ST_GeomFromText('LINESTRING Z (2 2 6,1.5 1.5 7,1 1 8,0.5 0.5 8,0 0 10)') AS linestring
 CROSS JOIN ST_GeomFromText('POLYGON((0 0 8, 0 1 8, 1 1 8, 1 0 8, 0 0 8))') AS polygon;

set postgis.backend=geos;
select ST_AsText(ST_Intersection(linestring, point)) As wkt
from  ST_GeomFromText('SRID=4326;LINESTRINGZ(4.76218700409 52.2927587513 1561203420, 4.76218700409 52.3093215393 1561203660, 4.87283742295 52.3093215393 1561203660, 4.87283742295 52.33876177267 1561204140, 4.88964542871666 52.33876177267 1561204140, 4.88964542871666 52.337120863311 1561204320, 4.93732452393 52.337120863311 1561204320, 4.93732452393 52.3237256996 1561204560, 4.95542407036 52.3237256996 1561204560, 4.95542407036 52.3301499022 1561204740, 5.04334151745 52.3301499022 1561204740, 5.04334151745 52.3124470746 1561205160, 5.15693843365 52.3124470746 1561205160, 5.15693843365 52.2807059141 1561206000, 5.16296803951 52.2807059141 1561206000, 5.16296803951 52.2654029812 1561206180, 5.17391145229 52.2654029812 1561206180, 5.17391145229 52.2378266477 1561206360, 5.18183469772 52.2378266477 1561206360, 5.18183469772 52.2262123333 1561206540, 5.1871830225 52.2262123333 1561206540, 5.1871830225 52.2162054878 1561206780, 5.17912298441 52.2162054878 1561206780, 5.17912298441 52.1779286417 1561206960, 5.12536346912 52.1779286417 1561206960, 5.12536346912 52.1100074277 1561207440, 5.11036455631 52.1100074277 1561207440, 5.11036455631 52.0901006501 1561207740)') AS linestring
 CROSS JOIN ST_Buffer(ST_GeomFromText('SRID=4326;POINT(4.76218700 52.2927587 1561203419)'), 100) AS point;

DROP VIEW AMS_TESTLINE_1; 
CREATE OR REPLACE VIEW AMS_TESTLINE_1 AS 
SELECT ST_AsText(ST_GeomFromText('SRID=4326;LINESTRINGZ(4.76218700409 52.2927587513 1561203420, 4.76218700409 52.3093215393 1561203660, 4.87283742295 52.3093215393 1561203660, 4.87283742295 52.33876177267 1561204140, 4.88964542871666 52.33876177267 1561204140, 4.88964542871666 52.337120863311 1561204320, 4.93732452393 52.337120863311 1561204320, 4.93732452393 52.3237256996 1561204560, 4.95542407036 52.3237256996 1561204560, 4.95542407036 52.3301499022 1561204740, 5.04334151745 52.3301499022 1561204740, 5.04334151745 52.3124470746 1561205160, 5.15693843365 52.3124470746 1561205160, 5.15693843365 52.2807059141 1561206000, 5.16296803951 52.2807059141 1561206000, 5.16296803951 52.2654029812 1561206180, 5.17391145229 52.2654029812 1561206180, 5.17391145229 52.2378266477 1561206360, 5.18183469772 52.2378266477 1561206360, 5.18183469772 52.2262123333 1561206540, 5.1871830225 52.2262123333 1561206540, 5.1871830225 52.2162054878 1561206780, 5.17912298441 52.2162054878 1561206780, 5.17912298441 52.1779286417 1561206960, 5.12536346912 52.1779286417 1561206960, 5.12536346912 52.1100074277 1561207440, 5.11036455631 52.1100074277 1561207440, 5.11036455631 52.0901006501 1561207740)')) AS testline, 24 AS feature_id

DROP VIEW AMS_TESTPOINT_1;
CREATE OR REPLACE VIEW AMS_TESTPOINT_1 AS 
SELECT ST_Buffer(ST_GeomFromText('SRID=4326;POINT(4.76218700 52.2927587 1561203419)'), 0.01) AS testpoint_buffer, 23 AS feature_id

DROP VIEW AMS_MEETINGPOINT_1
CREATE OR REPLACE VIEW AMS_MEETINGPOINT_1 AS 
set postgis.backend=SFCGAL;
DELETE FROM views WHERE view_id = 1;
INSERT INTO views (view_id, geom, buffer)
select 1, ST_AsText(ST_3DIntersection(linestring, point)) As geom, point
from  ST_GeomFromText('SRID=4326;LINESTRING Z (5.27071 52.36766 1561978920,5.27071 52.36766 1561978920,5.27068 52.36768 1561978920,5.27068 52.36767 1561978920,5.27048 52.36768 1561978922,5.27039 52.36763 1561978922,5.27035 52.36753 1561978924,5.27035 52.3675 1561978924,5.27035 52.36741 1561978926,5.27045 52.36731 1561978927,5.27049 52.36726 1561978928,5.27054 52.36723 1561978929,5.26821 52.3666 1561978951,5.2659 52.36586 1561978974,5.26496 52.36547 1561978983,5.26675 52.36317 1561979020,5.26648 52.36309 1561979022,5.26742 52.36215 1561979038,5.26801 52.36159 1561979047,5.26929 52.36035 1561979068,5.26946 52.36022 1561979071,5.27046 52.35919 1561979088,5.27074 52.35895 1561979092,5.2716 52.35831 1561979104,5.27168 52.35824 1561979105,5.27177 52.3583 1561979106,5.27503 52.36026 1561979146,5.27575 52.36055 1561979153,5.27602 52.36067 1561979156,5.27616 52.36054 1561979160,5.27602 52.36067 1561979160,5.27616 52.36054 1561979160,5.28002 52.36248 1561979197,5.28107 52.36116 1561979216,5.28104 52.36115 1561979220,5.28107 52.36116 1561979220,5.28196 52.36001 1561979238,5.28221 52.35956 1561979245,5.28229 52.35947 1561979247,5.28377 52.35765 1561979277,5.28382 52.35766 1561979280,5.28377 52.35765 1561979280,5.28382 52.35766 1561979280,5.28386 52.35753 1561979284,5.28555 52.35805 1561979326,5.28562 52.35799 1561979329,5.2857 52.35797 1561979330,5.28578 52.35797 1561979332,5.28599 52.35803 1561979337,5.28603 52.35806 1561979339,5.28608 52.35805 1561979340)') AS linestring
 CROSS JOIN ST_Buffer(ST_GeomFromText('SRID=4326;POINT Z(5.27039 52.36763 1561978922)'), 1) AS point;

-- CROSS JOIN ST_Buffer(ST_GeomFromText('SRID=4326;POINT(5.27039 52.36763 1561978922)'), 0.003) AS point;


set postgis.backend=geos;
DELETE FROM views WHERE view_id = 2;
INSERT INTO views (view_id, geom, buffer)
select 2, ST_Multi(ST_Intersection(geom3, point)) As geom, point
from trajectories
 CROSS JOIN ST_Buffer(ST_GeomFromText('SRID=4326;POINT(5.109820 52.0894 1561978922)'), 0.002) AS point;


INSERT INTO views (view_id, geom)
SELECT 3, ST_Buffer(ST_GeomFromText('SRID=4326;POINTM(5.27039 52.36763 1561978922)'), 0.01)



SELECT *, ST_AsText(geom3) AS readableLine
FROM trajectories 
WHERE trip_id = 91748410

SELECT * 
FROM temp_shapes S 
WHERE S.shape_id = (
  SELECT shape_id 
  FROM trips T 
  WHERE T.trip_id = 92263243
)
ORDER BY shape_dist_traveled ASC


CREATE OR REPLACE VIEW AMS_TESTPOINTS_2 AS 
SELECT * 
FROM stops S
JOIN trips T 
ON T.trip_id = S.trip_id 
JOIN trajectories TJ 
ON TJ.trip_id = T.trip_id 

SELECT ST_AsText(ST_3DIntersection(linestring, polygon)) As wkt
FROM  ST_GeomFromText('LINESTRING Z (2 2 6,1.5 1.5 7,1 1 8,0.5 0.5 8,0 0 10)') AS linestring
 CROSS JOIN ST_GeomFromText('POLYGON((0 0 8, 0 1 8, 1 1 8, 1 0 8, 0 0 8))') AS polygon;

SELECT ST_AsText(ST_MakePointM(-180, -90, extract(epoch from '2008-11-26 11:00'::timestamptz)));


SELECT ST_Distance(
			ST_Transform('SRID=4326;POINT Z(-72.1235 42.3521 0)'::geometry, 3857),
			ST_Transform('SRID=4326;LINESTRING Z(-72.1260 42.45 0, -72.123 42.1546 1)'::geometry, 3857)
		);

SELECT ST_AsText(the_geom)
		FROM
		(SELECT ST_LocateAlong(
			ST_GeomFromText('SRID=4326;LINESTRINGM(5.27071 52.36766 1561978920,5.27071 52.36766 1561978920,5.27068 52.36768 1561978920,5.27068 52.36767 1561978920,5.27048 52.36768 1561978922,5.27039 52.36763 1561978922,5.27035 52.36753 1561978924,5.27035 52.3675 1561978924,5.27035 52.36741 1561978926,5.27045 52.36731 1561978927,5.27049 52.36726 1561978928,5.27054 52.36723 1561978929,5.26821 52.3666 1561978951,5.2659 52.36586 1561978974,5.26496 52.36547 1561978983,5.26675 52.36317 1561979020,5.26648 52.36309 1561979022,5.26742 52.36215 1561979038,5.26801 52.36159 1561979047,5.26929 52.36035 1561979068,5.26946 52.36022 1561979071,5.27046 52.35919 1561979088,5.27074 52.35895 1561979092,5.2716 52.35831 1561979104,5.27168 52.35824 1561979105,5.27177 52.3583 1561979106,5.27503 52.36026 1561979146,5.27575 52.36055 1561979153,5.27602 52.36067 1561979156,5.27616 52.36054 1561979160,5.27602 52.36067 1561979160,5.27616 52.36054 1561979160,5.28002 52.36248 1561979197,5.28107 52.36116 1561979216,5.28104 52.36115 1561979220,5.28107 52.36116 1561979220,5.28196 52.36001 1561979238,5.28221 52.35956 1561979245,5.28229 52.35947 1561979247,5.28377 52.35765 1561979277,5.28382 52.35766 1561979280,5.28377 52.35765 1561979280,5.28382 52.35766 1561979280,5.28386 52.35753 1561979284,5.28555 52.35805 1561979326,5.28562 52.35799 1561979329,5.2857 52.35797 1561979330,5.28578 52.35797 1561979332,5.28599 52.35803 1561979337,5.28603 52.35806 1561979339,5.28608 52.35805 1561979340)'),1561978980) As the_geom) As foo;


-- SELECT ST_Distance(ST_SetSRID(ST_Point(5.28608, 52.35805), 4326), ST_SetSRID(ST_LocateAlong(geom6, 1562004300), 4326) )
EXPLAIN ANALYZE
SELECT ST_Distance(ST_SetSRID(ST_Point(5.28608, 52.35805), 4326), ST_LocateAlong(geom6, 1562004300) ) AS distance
FROM trajectories

EXPLAIN ANALYZE
WITH distance AS (
	SELECT ST_Distance(ST_SetSRID(ST_Point(5.28608, 52.35805), 4326), ST_LocateAlong(geom6, 1562004300) )
	FROM trajectories
)
SELECT * 
FROM distance 
WHERE distance IS NOT NULL

SELECT ST_AsText(ST_LocateAlong(geom6, 1561978920))
FROM trajectories

SELECT ST_AsText(geom6)
FROM trajectories

-- , ST_Distance('SRID=4326;POINT(5.27071 52.36766)'::geography, ST_LocateAlong(geom3, 1561978980), false) as sphere_dist 


!!!!! IMPORTANT !!!
UPDATE trajectories 
SET start_planned = subquery.start_planned,
    end_planned = subquery.end_planned 
FROM (
  SELECT ST_M(ST_StartPoint(geom)) AS start_planned, ST_M(ST_EndPoint(geom)) AS end_planned, trajectory_id
  FROM trajectories	
) AS subquery
WHERE trajectories.trajectory_id = subquery.trajectory_id


// END STATE 
SELECT *, ST_Distance_Sphere('SRID=4326;POINT(4.90036 52.37916)', ST_LocateAlong(geom, 1562080620)) AS distance
FROM trajectories
WHERE start_planned <= 1562080620
AND end_planned >= 1562080620
AND ST_DWithin(ST_LocateAlong(geom, 1562080620), 'SRID=4326;POINT(4.90036 52.37916)', 0.002690) 
ORDER BY distance ASC 