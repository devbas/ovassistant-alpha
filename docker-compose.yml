version: '3'
services: 
  redis:
    image: redis
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    sysctls:
      net.core.somaxconn: 1024
    # volumes:
      # - redis-data:/data
    ports: 
      - 127.0.0.1:6379:6379
    networks: 
      - app
  ingestion: 
    build: ./app/ingestion/
    volumes: 
      - ./app/ingestion/:/var/www/ovassistant/app/ingestion
    depends_on:
      - redis
      - postgis
    env_file: 
      - ./app/ingestion/ingestion.env
    ports: 
      - 127.0.0.1:8000:8000
    networks: 
      - app
  scoring: 
    build: ./app/scoring/
    volumes: 
      - ./app/scoring/:/var/www/ovassistant/app/scoring
    depends_on:
      - redis
      - postgis
      - nearest
    env_file: 
      - ./app/scoring/scoring.env
    ports: 
      - 127.0.0.1:8001:8001
    networks: 
      - app
  postgis:
    image: mdillon/postgis
    volumes:
      - postgis-data:/var/lib/postgresql
      - ./app/postgis/initdb/:/docker-entrypoint-initdb.d
    environment:
      # If you need to create multiple database you can add coma separated databases eg gis,data
      - POSTGRES_DB=gis
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
    ports:
      - 127.0.0.1:5434:5432
    restart: always
    # healthcheck:
      # test: "exit 0"
    networks: 
      - app
  nearest: 
    build: ./app/nearest/
    depends_on: 
      - postgis
      - redis
    ports: 
      - 127.0.0.1:9002:9002
    command: python calculate.py 
    volumes: 
      - ./app/nearest/:/usr/src/app
    env_file: 
      - ./app/nearest/nearest.env
    networks: 
      - app
  datadog:
    links:
      - redis 
      - nearest
      - scoring
      - ingestion
      - postgis
      - trajectories
    build: datadog
    env_file: 
      - ./datadog/datadog.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
      - /sys/kernel/debug:/sys/kernel/debug
    networks:
      - app
    security_opt:
      - apparmor:unconfined
    cap_add:
      - SYS_ADMIN
      - SYS_RESOURCE
      - SYS_PTRACE
      - NET_ADMIN
      - IPC_LOCK
  trajectories:
    build: ./app/trajectories
    env_file: 
      - ./app/trajectories/trajectories.env
    depends_on:
      - postgis
    networks: 
      - app 
    volumes: 
      - ./app/trajectories/:/var/www/ovassistant/app/trajectories
volumes:
  redis-data:
  node_modules:
  postgis-data:
networks: 
  app: